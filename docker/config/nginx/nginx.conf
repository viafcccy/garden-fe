#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # HTTPS server
    server {
        # SSL 默认访问端口号为 443
        listen 443 ssl;
        # 请填写绑定证书的域名
        server_name garden.vin;

        # 防止中文乱码
        charset utf-8;

        # 请填写证书文件的相对路径或绝对路径
        ssl_certificate /etc/nginx/garden.vin_bundle.crt;
        # 请填写私钥文件的相对路径或绝对路径
        ssl_certificate_key /etc/nginx/garden.vin.key;
        ssl_session_timeout 5m;

        #请按照以下协议配置
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; 
        ssl_prefer_server_ciphers on;

        location /health/nginx/https {
            default_type application/json;
            return 200 '{"code":0,"data":{"isHealth":true},"message":"nginx/https health check success"}';
        }

        location /health {
            proxy_pass http://garden_be:8018;
            proxy_redirect     off;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location / {
            root   /usr/share/nginx/html/;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html = 404;
        }
    }

    # HTTP server
    server {
        listen       80;
        server_name  garden.vin;
        #把http的域名请求转成https
        return 301 https://$host$request_uri; 

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location /health/nginx/http {
        #     default_type application/json;
        #     return 200 '{"code":0,"data":{"isHealth":true},"message":"nginx/http health check success"}';
        # }

        # location /health {
        #     proxy_pass http://garden_be:8018;
        #     proxy_redirect     off;
        #     proxy_set_header   Host             $host;
        #     proxy_set_header   X-Real-IP        $remote_addr;
        #     proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        # }

        # location / {
        #     root   /usr/share/nginx/html/;
        #     index  index.html index.htm;
        #     try_files $uri $uri/ /index.html = 404;
        # }

        # error_page  404              /404.html;

        # # redirect server error pages to the static page /50x.html
        # #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        # #
        # location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        # }

        # # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        # #
        # location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        # }

        # # deny access to .htaccess files, if Apache's document root
        # # concurs with nginx's one
        # #
        # location ~ /\.ht {
        #    deny  all;
        # }
    }


    # # another virtual host using mix of IP-, name-, and port-based configuration
    # #
    # server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }
}
